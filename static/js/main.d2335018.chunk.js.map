{"version":3,"sources":["scripts/surah.js","components/RightPanel/Top/Top.js","components/Quran/Verse/Verse.js","components/Quran/Translation/Translation.js","scripts/translation.js","components/Quran/Quran.js","scripts/scrollbar.js","components/RightPanel/TextDisplay/TextDisplay.js","scripts/audios.js","components/RightPanel/Player/Player.js","scripts/searchResults.js","components/RightPanel/SearchResults/SearchResults.js","components/RightPanel/Surah/Surah.js","components/RightPanel/RightPanel.js","App.js","scripts/scripts.js","serviceWorker.js","store/reducers/ChapterReducer.js","store/reducers/EditionReducer.js","store/reducers/SurahReducer.js","store/reducers/TranslationReducer.js","store/reducers/ReciterReducer.js","store/reducers/VerseRangeReducer.js","store/reducers/HighlightReducer.js","store/reducers/SurahListReducer.js","store/reducers/TranslationListReducer.js","store/reducers/EditionListReducer.js","store/reducers/ReciterListReducer.js","store/reducers/SelectedSurahReducer.js","store/reducers/SearchReducer.js","store/index.js","index.js"],"names":["fetchSurah","props","nextProps","a","console","table","edition","surah","verseRange","urlForSurah","log","offset","concat","limit","fetch","response","json","parsedJSON","data","Top","then","setState","catch","error","styles","surahName","direction","fontFamily","fontSize","color","padding","bismillah","revelationType","state","this","name","englishName","className","style","englishNameTranslation","number","numberOfAyahs","type","Component","connect","chapter","translation","ReactHint","ReactHintFactory","React","Verse","jsxJoin","array","str","length","reduce","result","item","Fragment","currentAyah","document","getElementById","highlight","prevAyah","ayah","tajweedRules","identifier","description","ayahText","text","split","map","ayahWords","ayahWord","config","regex","fn","key","rule","filter","elem","data-rh","data-rh-at","processString","events","delay","id","replace","numberInSurah","Translation","language","fetchTranslation","urlForTranslation","Quran","scrollBar","fetchTrans","mainDiv","height","window","innerHeight","searchResult","prevProps","prevState","_scrollBar","snapshot","scrollValue","getScrollValues","scrollTop","ayahDiv","transDiv","offsetHeight","scrollTo","adjustScrollbar","searchResults","rtl","noScrollX","ref","count","matches","match","ayahs","index","searchText","TextDisplay","fetchAudios","audio","urlForAudio","audios","url","title","Player","audioFiles","onMediaChangeHandler","event","splittedSrc","target","attributes","value","dispatch","playlist","controls","autoplay","autoplayDelayInSeconds","onMediaEvent","play","fetchSearchResults","SearchResults","results","keyword","Surah","onSurahChangeHandler","selectedSurah","surahList","find","element","options","onChange","placeholder","isRtl","defaultValue","RightPanel","App","marginLeft","marginRight","surahOptions","label","translations","groupBy","translationOptions","Object","keys","langTranslations","ISO6391","getNativeName","group","push","translationList","fetchTranslations","editionList","fetchTextEditions","reciterList","reciter","fetchRecitations","Boolean","location","hostname","initialState","ChapterReducer","action","EditionReducer","SurahReducer","TranslationReducer","ReciterReducer","VerseRangeReducer","HighlightReducer","SurahListReducer","TranslationListReducer","EditionListReducer","ReciterListReducer","SelectedSurahReducer","SearchReducer","rootReducer","combineReducers","store","createStore","getState","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d2335018.chunk.js","sourcesContent":["export const fetchSurah = async (props, nextProps) => {\n  console.table(\"props in fetchsurah\", props);\n  let edition = props.edition.edition;\n  let surah = props.surah.surah;\n  let verseRange = props.verseRange.verseRange;\n\n  if (nextProps) {\n    surah = nextProps.surah.surah;\n    edition = nextProps.edition.edition;\n    verseRange = nextProps.verseRange.verseRange;\n  }\n\n  let urlForSurah = \"http://api.alquran.cloud/surah/\" + surah + \"/\" + edition;\n\n  console.log(\"verseRange in Surah\", verseRange);\n  console.log(\"edition in Surah\", edition);\n\n  if (verseRange[0] !== 0 && verseRange[1] !== 0) {\n    let offset = \"?offset=\".concat(verseRange[0] - 1);\n    let limit = \"&limit=\".concat(verseRange[1] - (verseRange[0] - 1));\n    urlForSurah = urlForSurah.concat([offset + limit]);\n  }\n\n  let response = await fetch(urlForSurah);\n  let parsedJSON = await response.json();\n  return parsedJSON.data;\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ReactLoading from \"react-loading\";\nimport { fetchSurah } from \"../../../scripts/surah\";\n\nclass Top extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  fetchSurah = (nextProps) => {\n    fetchSurah(this.props, nextProps)\n      .then((surah) => {\n        this.setState({\n          surah: surah,\n        });\n      })\n      .catch((error) => {\n        console.log(\"error in topjs call\", error);\n      });\n  };\n\n  componentDidMount() {\n    this.fetchSurah();\n  }\n\n  componentDidUpdate(nextProps) {\n    if (this.props.surah.surah !== nextProps.surah.surah) {\n      this.setState({\n        surah: null,\n      });\n      this.fetchSurah(this.props);\n    }\n  }\n  styles = {\n    surahName: {\n      direction: \"rtl\",\n      fontFamily: \"Lateef\",\n      fontSize: 30,\n      color: \"green\",\n      padding: \"0px\",\n    },\n    bismillah: {\n      direction: \"rtl\",\n      fontFamily: \"Lateef\",\n      fontSize: 30,\n      color: \"green\",\n      padding: \"0px\",\n    },\n    revelationType: {\n      direction: \"rtl\",\n      fontFamily: \"Lateef\",\n      fontSize: 30,\n      color: \"green\",\n      padding: \"0px\",\n    },\n  };\n\n  render() {\n    if (!this.state.surah) return <ReactLoading color=\"blue\" type=\"spin\" />;\n    console.log(\"اسم\" ,this.state.surah.name);\n    console.log(\"Name\" ,this.state.surah.englishName);\n    return (\n      <div className=\"row\">\n        <div className=\"text-center\">\n          <h4 className=\"text-right\" style={this.styles.surahName}>\n            {this.state.surah.name}\n          </h4>\n        </div>\n        <div className=\"text-center\">\n          <h4 className=\"text-left\" style={this.styles.surahName}>\n            {this.state.surah.englishName} -{\" \"}\n            {this.state.surah.englishNameTranslation}\n          </h4>\n        </div>\n\n        <div className=\"text-center\">\n          <h3 className=\"text-center\" style={this.styles.bismillah}>\n            بِسْمِ اللَّهِ الرَّحْمَٰنِ الرَّحِيمِ\n          </h3>\n        </div>\n        <div className=\"text-center\">\n          <h4 className=\"text-center\" style={this.styles.revelationType}>\n            {this.state.surah.number} - {this.state.surah.revelationType} -{\" \"}\n            {this.state.surah.numberOfAyahs}\n          </h4>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStatesToProps = state => {\n  return {\n    surah: state.surah,\n    edition: state.edition,\n    chapter: state.chapter,\n    translation: state.translation,\n    verseRange: state.verseRange\n  };\n};\n\nexport default connect(mapStatesToProps)(Top);\n","import React, { Component } from \"react\";\nimport \"./Verse.css\";\nimport { connect } from \"react-redux\";\nimport processString from \"react-process-string\";\nimport ReactHintFactory from \"react-hint\";\nimport \"react-hint/css/index.css\";\n\nconst ReactHint = ReactHintFactory(React);\n\nclass Verse extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  componentDidMount() {\n    let currentAyah = document.getElementById(\n      \"ayah_\".concat(this.props.highlight.highlight)\n    );\n    if (currentAyah !== null && currentAyah.className === \"text-right ayah\") {\n      currentAyah.className = \"text-right ayah highlight\";\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    // console.log(\"currentrops\", this.props);\n    // console.log(\"nextProps\", nextProps);\n    if (this.props.highlight.highlight !== nextProps.highlight.highlight) {\n      let prevAyah = document.getElementById(\n        \"ayah_\".concat(this.props.highlight.highlight)\n      );\n      if (\n        prevAyah !== null &&\n        prevAyah.className === \"text-right ayah highlight\"\n      ) {\n        prevAyah.className = \"text-right ayah\";\n      }\n      let currentAyah = document.getElementById(\n        \"ayah_\".concat(nextProps.highlight.highlight)\n      );\n      if (currentAyah !== null && currentAyah.className === \"text-right ayah\") {\n        currentAyah.className = \"text-right ayah highlight\";\n      }\n    }\n  }\n  jsxJoin = (array, str) => {\n    return array.length > 0\n      ? array.reduce((result, item) => (\n          <React.Fragment>\n            {result}\n            {str}\n            {item}\n          </React.Fragment>\n        ))\n      : null;\n  };\n  render() {\n    let ayah = null;\n    let tajweedRules = [\n      {\n        identifier: \"h\",\n        description: \"Hamzat ul Wasl\"\n      },\n      {\n        identifier: \"s\",\n        description: \"Silent\"\n      },\n      {\n        identifier: \"l\",\n        description: \"Lam Shamsiyyah\"\n      },\n      {\n        identifier: \"n\",\n        description: \"Normal Prolongation: 2 Vowels\"\n      },\n      {\n        identifier: \"p\",\n        description: \"Permissible Prolongation: 2, 4, 6 Vowels\"\n      },\n      {\n        identifier: \"q\",\n        description: \"Qalaqah\"\n      },\n      {\n        identifier: \"o\",\n        description: \"Obligatory Prolongation: 4-5 Vowels\"\n      },\n      {\n        identifier: \"c\",\n        description: \"Ikhafa' Shafawi - With Meem\"\n      },\n      {\n        identifier: \"f\",\n        description: \"Ikhafa'\"\n      },\n      {\n        identifier: \"w\",\n        description: \"Idgham Shafawi - With Meem\"\n      },\n      {\n        identifier: \"i\",\n        description: \"Iqlab\"\n      },\n      {\n        identifier: \"a\",\n        description: \"Idgham - With Ghunnah\"\n      },\n      {\n        identifier: \"u\",\n        description: \"Idgham - Without Ghunnah\"\n      },\n      {\n        identifier: \"d\",\n        description: \"Idgham - Mutajanisayn\"\n      },\n      {\n        identifier: \"b\",\n        description: \"Idgham - Mutaqaribayn\"\n      },\n      {\n        identifier: \"g\",\n        description: \"Ghunnah: 2 Vowels\"\n      }\n    ];\n    if (this.props.edition.edition === \"quran-wordbyword\") {\n      let ayahText = [];\n      let splittedAyah = this.props.ayah.text.split(\"$\");\n      ayahText = splittedAyah.map(ayahWords => {\n        let ayahWord = ayahWords.split(\"|\");\n        if (ayahWord[0] !== \"\") {\n          return (\n            <div className=\"text-center ayahWord\">\n              {ayahWord[0]} <br /> {ayahWord[1]}\n            </div>\n          );\n        }\n        return null;\n      });\n      // console.log(ayahText);\n      ayah = (\n        <div className=\"wordbywordContainer\">\n          {this.jsxJoin(ayahText, <span />)}\n        </div>\n      );\n      //ayah = ayahText.join();\n    } else if (this.props.edition.edition === \"quran-tajweed\") {\n      ayah = this.props.ayah.text;\n      let config = [\n        {\n          regex: /\\[(\\w+)[^[]*\\[(.*?)\\]/g,\n          fn: (key, result) => {\n            let rule = tajweedRules.filter(\n              elem => elem.identifier === result[1]\n            );\n            return (\n              <span key={key}>\n                <span\n                  className={result[1]}\n                  data-rh={\n                    rule.length > 0\n                      ? rule[0].description\n                      : \"Description not found\"\n                  }\n                  data-rh-at=\"top\"\n                >\n                  {result[2]}\n                </span>\n              </span>\n            );\n          }\n        }\n      ];\n      ayah = processString(config)(ayah);\n    } else {\n      ayah = this.props.ayah.text;\n    }\n    return (\n      <div className=\"Verse text-right heading\">\n        <ReactHint events delay={100} />\n        <div\n          key={this.props.ayah.number}\n          className=\"text-right ayah\"\n          id={\"ayah_\".concat(this.props.ayah.number)}\n        >\n          {this.props.surah !== 1 &&\n          (this.props.edition.edition !== \"quran-wordbyword\" &&\n            this.props.edition.edition !== \"quran-tajweed\")\n            ? ayah\n                .replace(\"بِسْمِ ٱللَّهِ ٱلرَّحْمَٰنِ ٱلرَّحِيمِ\", \"\")\n                .replace(\"بِسْمِ اللَّهِ الرَّحْمَٰنِ الرَّحِيمِ\", \"\")\n                .replace(\"بسم الله الرحمن الرحيم\", \"\")\n                .replace(\"بِسمِ اللَّهِ الرَّحمٰنِ الرَّحيمِ\", \"\")\n            : ayah}\n\n          <div className=\"ayahContainer\">\n            <span className=\"ayahStop\">{this.props.ayah.numberInSurah}</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStatesToProps = state => {\n  return {\n    highlight: state.highlight,\n    edition: state.edition\n  };\n};\n\nexport default connect(mapStatesToProps)(Verse);\n","import React, { Component } from \"react\";\nimport \"./Translation.css\";\n\nclass Translation extends Component {\n  render() {\n    if (!this.props.ayah) return <p>Loading....</p>;\n    return (\n      <div className=\"Translation text-right heading\">\n        <div\n          key={this.props.ayah.number}\n          className={\"ayah \" + this.props.language}\n          id={\"trans_ayah_\".concat(this.props.ayah.number)}\n        >\n          {this.props.ayah.text}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Translation;\n","export const fetchTranslation = async (props, nextProps) => {\r\n  let surah = props.surah.surah;\r\n  let translation = props.translation.translation;\r\n  let verseRange = props.verseRange.verseRange;\r\n\r\n  if (nextProps) {\r\n    surah = nextProps.surah.surah;\r\n    translation = nextProps.translation.translation;\r\n    verseRange = nextProps.verseRange.verseRange;\r\n  }\r\n  if (translation === null) return null;\r\n\r\n  let urlForTranslation =\r\n    \"http://api.alquran.cloud/surah/\" + surah + \"/\" + translation;\r\n\r\n  if (verseRange[0] !== 0 && verseRange[1] !== 0) {\r\n    let offset = \"?offset=\".concat(verseRange[0] - 1);\r\n    let limit = \"&limit=\".concat(verseRange[1] - (verseRange[0] - 1));\r\n    urlForTranslation = urlForTranslation.concat([offset + limit]);\r\n  }\r\n\r\n  console.log(\"urlForTranslation for translation\", urlForTranslation);\r\n\r\n  let response = await fetch(urlForTranslation);\r\n  let parsedJSON = await response.json();\r\n\r\n  return parsedJSON.data;\r\n};\r\n","import React, { Component } from \"react\";\nimport ReactLoading from \"react-loading\";\nimport { connect } from \"react-redux\";\nimport Verse from \"./Verse/Verse\";\nimport Translation from \"./Translation/Translation\";\nimport Scrollbar from \"react-scrollbars-custom\";\nimport { fetchTranslation } from \"../../scripts/translation\";\nimport { fetchSurah } from \"../../scripts/surah\";\nimport { adjustScrollbar } from \"../../scripts/scrollbar\";\n\nclass Quran extends Component {\n  scrollBar = null;\n  constructor(props) {\n    super(props);\n    this.state = { searchResult: false, translation: null };\n  }\n\n  fetchTrans = nextProps => {\n    this.setState({\n      translation: null\n    });\n    fetchTranslation(this.props, nextProps).then(translation => {\n      this.setState({\n        translation: translation\n      });\n    });\n  };\n\n  fetchSurah = nextProps => {\n    fetchSurah(this.props, nextProps).then(surah => {\n      this.setState({\n        surah: surah\n      });\n    });\n  };\n\n  componentDidMount() {\n    this.fetchSurah();\n    if (this.props.translation.translation !== null) {\n      this.fetchTrans();\n    }\n  }\n\n  styles = {\n    mainDiv: {\n      height: window.innerHeight - 300 + \"px\",\n      direction: \"rtl\"\n    }\n  };\n\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    return typeof this._scrollBar !== \"undefined\" && this._scrollBar !== null\n      ? (this.scrollBar = this._scrollBar)\n      : this.scrollBar;\n  }\n\n  // static getDerivedStateFromProps(props, state) {\n  //   console.log(\"props\", props);\n  //   console.log(\"state\", state);\n  //   if (props.searchText.searchText !== null) {\n  //     return { searchText: props.searchText.searchText, searchResult: true };\n  //   }\n  //   return null;\n  // }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    console.log(\"I am in update\");\n\n    if (this.props !== prevProps) {\n      this.fetchSurah(this.props);\n      this.fetchTrans(this.props);\n    }\n\n    if (snapshot !== null) {\n      adjustScrollbar(this.scrollBar, this.props, prevProps);\n    }\n  }\n\n  //TODO: fetch Translation again on verse Range selection\n\n  render() {\n    if (!this.state.surah) return <ReactLoading color=\"green\" type=\"cylon\" />;\n\n    if (this.state.searchResult) {\n      if (!this.state.searchResults) {\n        return <ReactLoading color=\"green\" type=\"cylon\" />;\n      } else {\n        return (\n          <Scrollbar\n            style={this.styles.mainDiv}\n            rtl={true}\n            noScrollX={true}\n            scrollTop={0}\n            ref={scrollBar => {\n              this._scrollBar = scrollBar;\n            }}\n          >\n            <div> Total Results Found: {this.state.searchResults.count}</div>\n            {this.state.searchResults.matches.map(match => {\n              return <div>{match.text}</div>;\n            })}\n          </Scrollbar>\n        );\n      }\n    }\n\n    return (\n      <Scrollbar\n        style={this.styles.mainDiv}\n        rtl={true}\n        noScrollX={true}\n        scrollTop={0}\n        ref={scrollBar => {\n          this._scrollBar = scrollBar;\n        }}\n      >\n        {this.state.surah.ayahs.map((ayah, index) => {\n          return (\n            <div key={\"versecontainer_\".concat(ayah.number)}>\n              <Verse\n                ayah={ayah}\n                key={\"verse_\".concat(ayah.number)}\n                surah={this.state.surah.number}\n              />\n              {this.state.translation ? (\n                <Translation\n                  ayah={this.state.translation.ayahs[index]}\n                  language={this.state.translation.edition.language}\n                  key={\"trans_\".concat(ayah.number)}\n                />\n              ) : this.props.translation.translation === null ? null : (\n                <ReactLoading type=\"bars\" color=\"lightblue\" />\n              )}\n            </div>\n          );\n        })}\n      </Scrollbar>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  console.log(\"state in Quran\", state);\n  return {\n    surah: state.surah,\n    edition: state.edition,\n    chapter: state.chapter,\n    translation: state.translation,\n    verseRange: state.verseRange,\n    highlight: state.highlight,\n    searchText: state.searchText\n  };\n};\nexport default connect(mapStateToProps)(Quran);\n","export const adjustScrollbar = (scrollBar, props, nextProps) => {\n  if (nextProps.highlight.highlight < props.highlight.highlight) {\n    let scrollValue = scrollBar.getScrollValues().scrollTop;\n\n    const ayahDiv = document.getElementById(\n      \"ayah_\".concat(props.highlight.highlight)\n    );\n    const transDiv = document.getElementById(\n      \"trans_ayah_\".concat(props.highlight.highlight)\n    );\n\n    const ayahDivHeight = ayahDiv !== null ? ayahDiv.offsetHeight : 0;\n    const transDivHeight = transDiv !== null ? transDiv.offsetHeight : 0;\n\n    scrollValue += ayahDivHeight + transDivHeight;\n\n    scrollBar.scrollTo(scrollValue);\n  }\n  if (nextProps.highlight.highlight > props.highlight.highlight) {\n    scrollBar.scrollTo(0);\n  }\n};\n","import React, { Component } from \"react\";\n\nimport Quran from \"../../Quran/Quran\";\n\nclass TextDisplay extends Component {\n  render() {\n    return <Quran />;\n  }\n}\n\nexport default TextDisplay;\n","export const fetchAudios = async (props, nextProps) => {\n  let audio = props.audio.audio,\n    surah = props.surah.surah,\n    verseRange = props.verseRange.verseRange;\n  if (nextProps) {\n    audio = nextProps.audio.audio;\n    surah = nextProps.surah.surah;\n    verseRange = nextProps.verseRange.verseRange;\n  }\n\n  let urlForAudio = \"http://api.alquran.cloud/surah/\" + surah + \"/\" + audio;\n\n  if (verseRange[0] !== 0 && verseRange[1] !== 0) {\n    let offset = \"?offset=\".concat(verseRange[0] - 1);\n    let limit = \"&limit=\".concat(verseRange[1] - (verseRange[0] - 1));\n    urlForAudio = urlForAudio.concat([offset + limit]);\n  }\n\n  let response = await fetch(urlForAudio);\n  let parsedJSON = await response.json();\n  const audios = parsedJSON.data.ayahs.map(ayah => {\n    return {\n      url: ayah.audio,\n      title:\n        parsedJSON.data.englishName + \" [ Ayah \" + ayah.numberInSurah + \"]\",\n      ayah: ayah.numberInSurah\n    };\n  });\n  return audios;\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport AudioPlayer from \"react-responsive-audio-player\";\nimport ReactLoading from \"react-loading\";\nimport { fetchAudios } from \"../../../scripts/audios\";\nimport \"../../../../node_modules/react-responsive-audio-player/dist/audioplayer.css\";\n\nclass Player extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { surah: props.surah.surah };\n  }\n  fetchAudios = nextProps => {\n    fetchAudios(this.props, nextProps).then(audioFiles => {\n      this.setState({\n        audioFiles: audioFiles\n      });\n    });\n  };\n  componentDidMount() {\n    this.fetchAudios();\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.surah.surah !== state.surah) {\n      return { surah: props.surah.surah, audioFiles: null };\n    }\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.surah.surah !== this.props.surah.surah) {\n      this.fetchAudios(this.props);\n    }\n    if (prevProps.audio.audio !== this.props.audio.audio) {\n      this.setState({\n        audioFiles: null\n      });\n      this.fetchAudios(this.props);\n    }\n  }\n\n  onMediaChangeHandler = event => {\n    let src = event.target.attributes[\"src\"].value;\n    let splittedSrc = src.split(\"/\");\n    this.props.dispatch({\n      type: \"AYAHTOHIGHLIGHT\",\n      highlight: splittedSrc[splittedSrc.length - 1]\n    });\n  };\n\n  render() {\n    if (!this.state.audioFiles)\n      return <ReactLoading type=\"bubbles\" color=\"black\" />;\n    return (\n      <div>\n        <AudioPlayer\n          playlist={this.state.audioFiles}\n          controls={[\"playpause\", \"forwardskip\", \"progressdisplay\"]}\n          autoplay={false}\n          autoplayDelayInSeconds={2.1}\n          onMediaEvent={{ play: this.onMediaChangeHandler }}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStatesToProps = state => {\n  return {\n    surah: state.surah,\n    audio: state.audio,\n    verseRange: state.verseRange\n  };\n};\n\nexport default connect(mapStatesToProps)(Player);\n","export const fetchSearchResults = async searchText => {\n  //   this.setState({\n  //     searchResult: true\n  //   });\n\n  let response = await fetch(\"http://api.alquran.cloud/search/\" + searchText + \"/all\");\n  let parsedJSON = await response.json();\n\n  return parsedJSON.data;\n};\n","import React, { Component } from \"react\";\nimport ReactLoading from \"react-loading\";\nimport Scrollbar from \"react-scrollbars-custom\";\nimport \"./SearchResults.css\";\n\nclass SearchResults extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  styles = {\n    mainDiv: {\n      height: window.innerHeight - 100 + \"px\",\n      direction: \"rtl\"\n    }\n  };\n  render() {\n    if (!this.props.results) return <ReactLoading type=\"cylon\" color=\"green\" />;\n    console.log(this.props.results);\n    return (\n      <div className=\"SearchResults\">\n        <div className=\"top\">\n          <h3>\n            {this.props.results.count} Search Results found for keyword{\" \"}\n            {this.props.keyword}\n          </h3>\n        </div>\n        <Scrollbar\n          style={this.styles.mainDiv}\n          rtl={false}\n          noScrollX={true}\n          scrollTop={0}\n          ref={scrollBar => {\n            this._scrollBar = scrollBar;\n          }}\n        >\n          <div className=\"searchResults\">\n            {this.props.results.matches.map((result, index) => {\n              return (\n                <div key={index} className=\"result\">\n                  <h5>Edition: {result.edition.name}</h5>\n                  <p className=\"surah\">\n                    {\" \"}\n                    Surah: {result.surah.name} Ayah: {result.numberInSurah}\n                  </p>\n                  <p className=\"text\"> {result.text}</p>\n                </div>\n              );\n            })}\n          </div>\n        </Scrollbar>\n      </div>\n    );\n  }\n}\n\nexport default SearchResults;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ReactLoading from \"react-loading\";\nimport Select from \"react-select\";\nimport \"./Surah.css\";\n\nclass Surah extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {}\n\n  onSurahChangeHandler = event => {\n    console.log(\"new:\",event);\n    let selectedSurah = this.props.surahList.surahList.find(\n      element => element.value === event.value\n    );\n    this.props.dispatch({\n      type: \"SELECTEDSURAH\",\n      selectedSurah: selectedSurah\n    });\n    console.log(\"selectedSurah\", selectedSurah);\n    console.log(\"selectedSurahValue\", selectedSurah.value);\n    this.props.dispatch({ type: \"SURAH\", surah: selectedSurah.value });\n    this.props.dispatch({ type: \"AYAHRANGE\", verseRange: [0, 0] });\n  };\n  render() {\n    if (!this.props.surahList.surahList)\n      return <ReactLoading color=\"green\" type=\"spinningBubbles\" />;\n\n    return (\n      <div className=\"Surah\">\n        <h5 className=\"surah-title\">Surah</h5>\n        <Select\n          options={this.props.surahList.surahList}\n          onChange={this.onSurahChangeHandler}\n          className=\"surahName text-right\"\n          placeholder=\"Select Surah\"\n          isRtl={true}\n          defaultValue={this.props.surahList.surahList[0]}\n          value={this.props.surahList.surahList.find(\n            element => element.value === this.props.surah.surah\n          )}\n        />\n      </div>\n    );\n  }\n}\nconst mapStatesToProps = state => {\n  return {\n    surahList: state.surahList,\n    surah: state.surah,\n    selectedSurah: state.selectedSurah,\n    verseRange: state.verseRange\n  };\n};\nexport default connect(mapStatesToProps)(Surah);\n","import React, { Component } from \"react\";\nimport Top from \"./Top/Top\";\nimport TextDisplay from \"./TextDisplay/TextDisplay\";\nimport Player from \"./Player/Player\";\nimport { connect } from \"react-redux\";\nimport { fetchSearchResults } from \"../../scripts/searchResults\";\nimport SearchResults from \"./SearchResults/SearchResults\";\nimport Surah from \"./Surah/Surah\";\nimport {Tabs,Tab,TabList,TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\n\nclass RightPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { searchResult: false };\n  }\n\n  fetchSearchResults = searchText => {\n    fetchSearchResults(searchText)\n      .then(result => {\n        this.setState({\n          searchResults: result\n        });\n      })\n      .catch(error => console.log(\"error in results\", error));\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.searchText.searchText !== null) {\n      return { searchText: props.searchText.searchText, searchResult: true };\n    }\n    return { searchText: null, searchResult: false };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"this.state\", this.state, prevProps);\n    if (\n      this.state.searchText !== null &&\n      this.state.searchText !== prevProps.searchText.searchText\n    ) {\n      this.fetchSearchResults(this.state.searchText);\n    }\n  }\n\n  render() {\n    if (this.state.searchResult)\n      return (\n        <SearchResults\n          results={this.state.searchResults}\n          keyword={this.state.searchText}\n        />\n      );\n    return (\n      <div className=\"m-2 p-3\">\n        <Tabs className=\"tabPanel\">\n          <TabList>\n            <Tab> By Surah</Tab>\n            {/* <Tab> By Chapter</Tab> */}\n          </TabList>\n          <TabPanel>\n            <Surah />\n            \n          </TabPanel>\n          {/* <TabPanel> */}\n            {/* <Chapter />\n            <Verse /> */}\n          {/* </TabPanel> */}\n        </Tabs>\n        <Top />\n        <TextDisplay />\n        <Player />\n      </div>\n    );\n  }\n}\nconst mapStatesToProps = state => {\n  return {\n    searchText: state.searchText\n  };\n};\nexport default connect(mapStatesToProps)(RightPanel);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n// import LeftPanel from \"./components/LeftPanel/LeftPanel\";\nimport RightPanel from \"./components/RightPanel/RightPanel\";\nimport { connect } from \"react-redux\";\n\nimport {\n  fetchSurahs,\n  fetchRecitations,\n  fetchTextEditions,\n  fetchTranslations\n} from \"./scripts/scripts\";\n\nclass App extends Component {\n  styles = {\n    marginLeft: 0,\n    marginRight: 0\n  };\n\n  componentWillMount() {\n    fetchSurahs(this.props);\n    fetchTranslations(this.props);\n    fetchTextEditions(this.props);\n    fetchRecitations(this.props);\n  }\n\n  render() {\n    return (\n      // <div className=\"row\" style={this.styles}>\n         /* {<div className=\"col-md-3 p-2\">\n          <LeftPanel />\n        </div>  }*/\n        <div className=\"col-md-9 p-2\">\n          <RightPanel />\n        </div>\n      // </div>\n    );\n  }\n}\n\nexport default connect()(App);\n","import groupBy from \"lodash/groupBy\";\nimport ISO6391 from \"iso-639-1\";\n\nexport const fetchSurahs = props => {\n  fetch(\"http://api.alquran.cloud/surah\")\n    .then(response => response.json())\n    .then(parsedJSON => {\n      //console.log(parsedJSON.data);\n      const surahOptions = parsedJSON.data.map(function(surah) {\n        return {\n          value: surah.number,\n          label: surah.name,\n          numberOfAyahs: surah.numberOfAyahs\n        };\n      });\n      props.dispatch({\n        type: \"SURAHLIST\",\n        surahList: surahOptions\n      });\n    });\n};\n\nexport const fetchTranslations = props => {\n  fetch(\"http://api.alquran.cloud/edition?format=text&type=translation\")\n    .then(response => response.json())\n    .then(parsedJSON => {\n      const translations = groupBy(parsedJSON.data, translation => {\n        return translation.language;\n      });\n\n      const languageKeys = Object.keys(translations);\n\n      const translationOptions = languageKeys.map(language => {\n        let langTranslations = translations[language];\n        return {\n          label: ISO6391.getNativeName(language),\n          options: langTranslations.map(translation => {\n            return {\n              value: translation.identifier,\n              label: translation.name,\n              group: ISO6391.getNativeName(language)\n            };\n          })\n        };\n      });\n      translationOptions.push({\n        label: \"No Translation\",\n        options: [\n          {\n            value: \"null\",\n            label: \"No Translation\",\n            group: \"No Translation\"\n          }\n        ]\n      });\n      console.log(\"TranslationOptions\", translationOptions);\n\n      props.dispatch({\n        type: \"TRANSLATIONLIST\",\n        translationList: translationOptions\n      });\n    });\n};\n\nexport const fetchTextEditions = props => {\n  fetch(\"http://api.alquran.cloud/edition?format=text&language=ar&type=quran\")\n    .then(response => response.json())\n    .then(parsedJSON => {\n      //console.log(\"editions\", parsedJSON.data);\n\n      const editionList = parsedJSON.data.map(edition => {\n        return {\n          value: edition.identifier,\n          label: edition.name\n        };\n      });\n      props.dispatch({\n        type: \"EDITIONLIST\",\n        editionList: editionList\n      });\n    });\n};\n\nexport const fetchRecitations = props => {\n  fetch(\n    \"http://api.alquran.cloud/edition?format=audio&type=versebyverse&language=ar\"\n  )\n    .then(response => response.json())\n    .then(parsedJSON => {\n      const reciterList = parsedJSON.data.map(reciter => {\n        return {\n          value: reciter.identifier,\n          label: reciter.name\n        };\n      });\n      props.dispatch({\n        type: \"RECITERLIST\",\n        reciterList: reciterList\n      });\n      console.log(parsedJSON.data);\n    });\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n  chapter: 1\r\n};\r\n\r\nconst ChapterReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CHAPTER\":\r\n      return {\r\n        chapter: action.chapter\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ChapterReducer;\r\n","const initialState = {\n  edition: \"quran-simple\"\n};\n\nconst EditionReducer = (state = initialState, action) => {\n  // console.log(\"reducerEdition\", state);\n  // console.log(\"ActionEdition\", action);\n  switch (action.type) {\n    case \"EDITION\":\n      return {\n        edition: action.edition\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default EditionReducer;\n","const initialState = {\n  surah: 1\n};\n\nconst SurahReducer = (state = initialState, action) => {\n  // console.log(\"reducerSurah\", state);\n  // console.log(\"ActionSurah\", action);\n  switch (action.type) {\n    case \"SURAH\":\n      return {\n        surah: action.surah       \n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default SurahReducer;\n","const initialState = {\n  translation: null\n};\n\nconst TranslationReducer = (state = initialState, action) => {\n  // console.log(\"reducerSurah\", state);\n  // console.log(\"ActionSurah\", action);\n  switch (action.type) {\n    case \"TRANSLATION\":\n      return {\n        translation: action.translation\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default TranslationReducer;\n","const initialState = {\n  audio: \"ar.alafasy\"\n};\n\nconst ReciterReducer = (state = initialState, action) => {\n  // console.log(\"reducerEdition\", state);\n  // console.log(\"ActionEdition\", action);\n  switch (action.type) {\n    case \"AUDIO\":\n      return {\n        audio: action.audio\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default ReciterReducer;\n","const initialState = {\n  verseRange: [0, 0]\n};\n\nconst VerseRangeReducer = (state = initialState, action) => {\n  // console.log(\"reducerEdition\", state);\n  // console.log(\"ActionEdition\", action);\n  switch (action.type) {\n    case \"AYAHRANGE\":\n      return {\n        verseRange: action.verseRange\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default VerseRangeReducer;\n","const initialState = {\n  highlight: 1\n};\n\nconst HighlightReducer = (state = initialState, action) => {\n  // console.log(\"reducerEdition\", state);\n  // console.log(\"ActionEdition\", action);\n  switch (action.type) {\n    case \"AYAHTOHIGHLIGHT\":\n      return {\n        highlight: action.highlight\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default HighlightReducer;\n","const initialState = {\n  surahList: null\n};\n\nconst SurahListReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SURAHLIST\":\n      return {\n        surahList: action.surahList\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default SurahListReducer;\n","const initialState = {\n  translationList: null\n};\n\nconst TranslationListReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"TRANSLATIONLIST\":\n      return {\n        translationList: action.translationList\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default TranslationListReducer;\n","const initialState = {\n  editionList: null\n};\n\nconst EditionListReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"EDITIONLIST\":\n      return { editionList: action.editionList };\n\n    default:\n      return state;\n  }\n};\n\nexport default EditionListReducer;\n","const initialState = {\n  reciterList: null\n};\n\nconst ReciterListReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"RECITERLIST\":\n      return { reciterList: action.reciterList };\n\n    default:\n      return state;\n  }\n};\n\nexport default ReciterListReducer;\n","const initialState = {\n  selectedSurah: {\n    value: 1,\n    label: \"1\",\n    numberOfAyahs: 7\n  }\n};\n\nconst SelectedSurahReducer = (state = initialState, action) => {\n  // console.log(\"reducerEdition\", state);\n  // console.log(\"ActionEdition\", action);\n  switch (action.type) {\n    case \"SELECTEDSURAH\":\n      return { selectedSurah: action.selectedSurah };\n\n    default:\n      return state;\n  }\n};\n\nexport default SelectedSurahReducer;\n","const initialState = {\n  searchText: null\n};\n\nconst SearchReducer = (state = initialState, action) => {\n  // console.log(\"reducerEdition\", state);\n  // console.log(\"ActionEdition\", action);\n  switch (action.type) {\n    case \"SEARCH\":\n      return {\n        searchText: action.searchText\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default SearchReducer;\n","import { createStore, combineReducers } from \"redux\";\r\nimport ChapterReducer from \"./reducers/ChapterReducer\";\r\nimport EditionReducer from \"./reducers/EditionReducer\";\r\nimport SurahReducer from \"./reducers/SurahReducer\";\r\nimport TranslationReducer from \"./reducers/TranslationReducer\";\r\nimport ReciterReducer from \"./reducers/ReciterReducer\";\r\nimport VerseRangeReducer from \"./reducers/VerseRangeReducer\";\r\nimport HighlightReducer from \"./reducers/HighlightReducer\";\r\nimport SurahListReducer from \"./reducers/SurahListReducer\";\r\nimport TranslationListReducer from \"./reducers/TranslationListReducer\";\r\nimport EditionListReducer from \"./reducers/EditionListReducer\";\r\nimport ReciterListReducer from \"./reducers/ReciterListReducer\";\r\nimport SelectedSurahReducer from \"./reducers/SelectedSurahReducer\";\r\nimport SearchReducer from \"./reducers/SearchReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  surahList: SurahListReducer,\r\n  translationList: TranslationListReducer,\r\n  editionList: EditionListReducer,\r\n  reciterList: ReciterListReducer,\r\n  selectedSurah: SelectedSurahReducer,\r\n  searchText: SearchReducer,\r\n  chapter: ChapterReducer,\r\n  edition: EditionReducer,\r\n  surah: SurahReducer,\r\n  translation: TranslationReducer,\r\n  audio: ReciterReducer,\r\n  verseRange: VerseRangeReducer,\r\n  highlight: HighlightReducer\r\n});\r\nconst store = createStore(rootReducer);\r\n\r\nconsole.log(\"store\", store.getState().selectedSurah.selectedSurah.numberOfAyahs);\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nconst Quran = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(<Quran />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}